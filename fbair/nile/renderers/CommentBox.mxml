<!--
  Copyright Facebook Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
 -->
<!-- There's one of these in every UFI
     We hide and show this box to create new comments -->
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml"
         xmlns:gui="fbair.gui.*"
         xmlns:util="fbair.util.display.*"
         creationComplete="creationComplete(event)" >

  <!-- Picture of you, buddy! -->
  <gui:RoundedProfileImage profileID="{FBConnect.session.uid}"
                           linkEnabled="false"
                           size="{CommentRenderer.PicSize}"
                           visible="{data.commentBoxActive}"
                           includeInLayout="{data.commentBoxActive}" />

  <mx:VBox styleName="commentInputBox"
           width="100%" >
    <!-- This is where you put your comment! -->
    <util:GrowableTextArea id="commentInput"
                           styleName="commentInput"
                           width="100%" />

    <util:FBButton id="commentButton"
                   autoStyle="true"
                   styleNamePrefix="commentButton"
                   click="submitComment(event)"
                   visible="{data.commentBoxActive}"
                   includeInLayout="{data.commentBoxActive}" >
      <mx:Label styleName="fbButtonLabel"
                text="Comment" />
    </util:FBButton>
  </mx:VBox>


  <mx:Script><![CDATA[
    import fb.FBAPI;
    import fb.FBConnect;
    import fb.FBEvent;
    import fb.util.Output;

    import fbair.util.CommentCache;

    import flash.events.Event;

    import mx.binding.utils.BindingUtils;
    import mx.binding.utils.ChangeWatcher;
    import mx.events.FlexEvent;

    // This binds our textarea's active with the data.commentBoxActive
    private var bound:Boolean = false;
    private var dataWatcher:ChangeWatcher;
    private var activeWatcher:ChangeWatcher;

    // constructor
    private function creationComplete(event:FlexEvent):void {
      if (!bound) bind();
    }

    // Our data setter
    override public function set data(new_data:Object):void {
      unbind();
      super.data = new_data;
      bind();
    }

    // Unbind shit for reuse
    public function destroy():void {
      unbind();
    }

    // Watcher setups
    private function unbind():void {
      if (dataWatcher) dataWatcher.unwatch();
      if (activeWatcher) activeWatcher.unwatch();
      bound = false;
    }

    private function bind():void {
      if (!data) return;
      Output.assert(!bound, "Calling bind when already bound? memmory leak");
      dataWatcher = BindingUtils.bindProperty(commentInput, "active",
                                              data, "commentBoxActive");
      activeWatcher = BindingUtils.bindProperty(data, "commentBoxActive",
                                                commentInput, "active");
      bound = true;
    }

    // Called when we actually click the Submit button
    private function submitComment(event:MouseEvent):void {
      if (!data.comments.can_post || commentInput.text.length == 0) return;

      // Disable input for now
      commentInput.editable = false;
      commentButton.enabled = false;

      // Call the server to add our comment to this stream entry
      FBAPI.callMethod("stream.addComment",
                       {post_id:data.post_id,
                        comment:commentInput.text})
        .addEventListener(FBEvent.SUCCESS, commentSubmitted);
    }

    // Called when our comment has been submitted to server
    private function commentSubmitted(event:FBEvent):void {
      // Add comment to cache
      CommentCache.addComment({
        fromid:FBConnect.session.uid,
        id:event.data,
        text:commentInput.text,
        time:(new Date().time / 1000),
        post_id:data.post_id
      });

      // Re-enable input, but deactivate
      data.commentBoxActive = false;
      commentButton.enabled = true;
      commentInput.editable = true;
    }
  ]]></mx:Script>
</mx:HBox>
